{"ast":null,"code":"var _jsxFileName = \"/home/connor/Documents/Projects/rxminder/RxMinder.io/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport PrescriptionList from './components/PrescriptionList';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [editedPrescription, setEditedPrescription] = useState(null);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/get', {\n      headers: {\n        'method': 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    }).then(resp => resp.json()).then(resp => setPrescriptions(resp)).catch(error => console.log(error));\n  }, []);\n\n  const editPrescription = prescription => {\n    setEditedPrescription(prescription);\n  };\n\n  const updatedData = prescription => {\n    const new_prescription = prescriptions.map(my_prescription => {\n      if (my_prescription.id === prescription.id) {\n        return prescription;\n      } else {\n        return my_prescription;\n      }\n    });\n    setPrescriptions(new_prescription);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here is a simple example of displaying data from the database to the front end, served up from the flask back-end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PrescriptionList, {\n      prescriptions: prescriptions,\n      editPrescription: editPrescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), editedPrescription ? /*#__PURE__*/_jsxDEV(Form, {\n      prescription: editedPrescription,\n      updatedData: updatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"B8hGVfa4CBCLo3ajZvalA+NomWo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/connor/Documents/Projects/rxminder/RxMinder.io/frontend/src/App.js"],"names":["React","Component","useState","useEffect","PrescriptionList","Form","App","prescriptions","setPrescriptions","editedPrescription","setEditedPrescription","fetch","headers","then","resp","json","catch","error","console","log","editPrescription","prescription","updatedData","new_prescription","map","my_prescription","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,IAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AACjCC,MAAAA,OAAO,EAAE;AACP,kBAAS,KADF;AAEPA,QAAAA,OAAO,EAAC;AACN,0BAAe;AADT;AAFD;AADwB,KAA9B,CAAL,CASCC,IATD,CASMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EATd,EAUCF,IAVD,CAUMC,IAAI,IAAIN,gBAAgB,CAACM,IAAD,CAV9B,EAWCE,KAXD,CAWOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXhB;AAaD,GAdQ,EAcP,EAdO,CAAT;;AAgBA,QAAMG,gBAAgB,GAAIC,YAAD,IAAkB;AACzCX,IAAAA,qBAAqB,CAACW,YAAD,CAArB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAID,YAAD,IAAkB;AACpC,UAAME,gBAAgB,GAAGhB,aAAa,CAACiB,GAAd,CAAkBC,eAAe,IAAK;AAC7D,UAAIA,eAAe,CAACC,EAAhB,KAAuBL,YAAY,CAACK,EAAxC,EAA4C;AAC1C,eAAOL,YAAP;AACD,OAFD,MAEO;AACL,eAAOI,eAAP;AACD;AACF,KANwB,CAAzB;AAOAjB,IAAAA,gBAAgB,CAACe,gBAAD,CAAhB;AACD,GATD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,gBAAD;AAAkB,MAAA,aAAa,EAAIhB,aAAnC;AAAkD,MAAA,gBAAgB,EAAIa;AAAtE;AAAA;AAAA;AAAA;AAAA,YALJ,EAQKX,kBAAkB,gBAAG,QAAC,IAAD;AAAM,MAAA,YAAY,EAAIA,kBAAtB;AAA0C,MAAA,WAAW,EAAIa;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6E,IARpG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjDQhB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport PrescriptionList from './components/PrescriptionList';\nimport Form from './components/Form';\n\nfunction App() {\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [editedPrescription, setEditedPrescription] = useState(null);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/get', {\n      headers: {\n        'method':'GET',\n        headers:{\n          'Content-Type':'application/json'\n        }\n\n      }\n    })\n    .then(resp => resp.json())\n    .then(resp => setPrescriptions(resp))\n    .catch(error => console.log(error))\n\n  },[])\n\n  const editPrescription = (prescription) => {\n    setEditedPrescription(prescription)\n  }\n\n  const updatedData = (prescription) => {\n    const new_prescription = prescriptions.map(my_prescription =>  {\n      if (my_prescription.id === prescription.id) {\n        return prescription\n      } else {\n        return my_prescription\n      }\n    })\n    setPrescriptions(new_prescription)\n  } \n\n\n  return (\n    <div className=\"App\">\n        <h1>Example</h1>\n        <br/>\n        <br/>\n        <p>Here is a simple example of displaying data from the database to the front end, served up from the flask back-end</p>\n        <PrescriptionList prescriptions = {prescriptions} editPrescription = {editPrescription}/>\n\n\n        {editedPrescription ? <Form prescription = {editedPrescription} updatedData = {updatedData}/> : null}\n        \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}